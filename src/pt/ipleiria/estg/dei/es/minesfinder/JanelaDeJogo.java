package pt.ipleiria.estg.dei.es.minesfinder;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


public class JanelaDeJogo extends javax.swing.JFrame {

    private BotaoCampoMinado butoes[][];
    private CampoMinado campoMinado;
    private TabelaRecordes recordes;
    
    public JanelaDeJogo(CampoMinado campo, TabelaRecordes tabela) {
        initComponents();
        
        this.campoMinado = campo;
        this.recordes = tabela;
        butoes = new BotaoCampoMinado[campoMinado.getLargura()][campoMinado.getAltura()];
                
        getContentPane().setLayout(new GridLayout(campoMinado.getAltura(), campoMinado.getLargura()));
        
        ActionListener action = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                BotaoCampoMinado butao = (BotaoCampoMinado) e.getSource();
                int x = butao.getColuna();
                int y = butao.getLinha();
                campoMinado.revelarQuadricula(x,y);
                atualizarEstadoBotoes();
                if(campoMinado.isJogoTerminado()){
                    if(campoMinado.isJogadorDerrotado()){
                        JOptionPane.showMessageDialog(null, "Mine blown", "Game Over", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(null, "Parabéns. Conseguiu descobrir todas as minas em " + 
                                (campoMinado.getDuracaoDeJogo()/1000) + " segundos", "Vitória", JOptionPane.INFORMATION_MESSAGE);
                 
                        boolean novoRecorde = campo.getDuracaoDeJogo() < recordes.getTempo();
                        if(novoRecorde){
                            String nome = JOptionPane.showInputDialog("Introduza o seu nome");
                            recordes.setRecord(nome, campoMinado.getDuracaoDeJogo());
                        }
                       
                    }
                 
                    setVisible(false);
                }
                
            }
        };
        
        MouseListener mouseListener = new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) { 
            }

            @Override
            public void mousePressed(MouseEvent e) {
                if(e.getButton() == MouseEvent.BUTTON3){
                    BotaoCampoMinado botao = (BotaoCampoMinado) e.getSource();
                    int x = botao.getColuna();
                    int y = botao.getLinha();
                    if(campoMinado.getEstado(x, y) == CampoMinado.TAPADO){
                        campoMinado.marcarComoTendoMina(x, y);
                    }else{
                        if(campoMinado.getEstado(x, y) == CampoMinado.MARCADO){
                            campoMinado.marcarComoSuspeita(x, y);
                        }else{
                            if(campoMinado.getEstado(x, y) == CampoMinado.DUVIDA){
                                campoMinado.desmarcar(x, y);
                            }
                        }
                    }
                    atualizarEstadoBotoes();
                }
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        };
        
        for(int y=0; y<campoMinado.getAltura(); y++){
            for(int x=0; x<campoMinado.getLargura(); x++){
                butoes[x][y] = new BotaoCampoMinado(x,y);
                butoes[x][y].addActionListener(action);
                butoes[x][y].addMouseListener(mouseListener);
                getContentPane().add(butoes[x][y]);
            }
        }
        //TODO add keyPressed interface to game
    } 
    
    public void atualizarEstadoBotoes(){
        for(int x = 0; x < campoMinado.getLargura();x++){
            for(int y=0;y<campoMinado.getAltura();y++){
                butoes[x][y].setEstado(campoMinado.getEstado(x,y));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */ 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
/*        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaDeJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaDeJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaDeJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaDeJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /*  java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaDeJogo().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}